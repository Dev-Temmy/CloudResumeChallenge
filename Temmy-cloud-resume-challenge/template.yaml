AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  Temmy-cloud-resume-challenge

  Sample SAM Template for Temmy-cloud-resume-challenge
  
# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3

Resources:
  MyResume:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: PublicRead
      WebsiteConfiguration:
        IndexDocument: resume.html
      BucketName: my-cloudresume-challenge

  MyDynamoDBTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: temmy-cloud-resume-challenge
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
      - AttributeName: "ID"
        AttributeType: "S"
      KeySchema: 
      - AttributeName: "ID"
        KeyType: "HASH"

  MyRoute53Record:
    Type: 'AWS::Route53::RecordSetGroup'
    Properties:
      HostedZoneId: Z0935471VDBASDT47II6 #hostedID from Route53 domain name
      RecordSets:
      - Name: website.cloudtherapy.link #domain name
        Type: A
        AliasTarget:
          HostedZoneId: Z2FDTNDATAQYW2 #Cloudfront distribution general one
          DNSName: !GetAtt MyDistribution.DomainName #or distribution domain name from Cloudfront

  MyCertificate: 
    Type: AWS::CertificateManager::Certificate
    Properties: 
      DomainName: website.cloudtherapy.link
      ValidationMethod: DNS
  
  MyDistribution:
    Type: AWS::CloudFront::Distribution
    Properties: 
      DistributionConfig:
        ViewerCertificate:
          AcmCertificateArn: arn:aws:acm:us-east-1:379590863734:certificate/483c2d25-ecc5-4851-91c5-7844432ce423
          SslSupportMethod: sni-only
        Aliases: 
          - website.cloudtherapy.link
        DefaultCacheBehavior:
          ViewerProtocolPolicy: redirect-to-https
          TargetOriginId: my-cloudresume-challenge.s3-website-us-west-2.amazonaws.com
          DefaultTTL: 0
          MinTTL: 0
          MaxTTL: 0
          ForwardedValues:
            QueryString: false
        Origins:
        - DomainName: my-cloudresume-challenge.s3-website-us-west-2.amazonaws.com
          Id: my-cloudresume-challenge.s3-website-us-west-2.amazonaws.com
          CustomOriginConfig:
              HTTPPort: 80
              HTTPSPort: 443
              OriginProtocolPolicy: http-only
              OriginKeepaliveTimeout: 10
              OriginReadTimeout: 60
              OriginSSLProtocols:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - SSLv3
        Enabled: true
        HttpVersion: 'http2'
        DefaultRootObject: resume.html

  BucketPolicy:   
    Type: AWS::S3::BucketPolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: PublicReadForGetBucketObjects
            Effect: Allow
            Principal: '*'
            Action: 's3:GetObject'
            Resource: !Join
              - ''
              - - 'arn:aws:s3:::'
                - !Ref MyResume
                - /*
      Bucket: !Ref MyResume         
  GetFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: get-function/
      Handler: app.lambdaHandler
      Runtime: nodejs14.x
      Architectures:
        - x86_64
      Events:
        HelloWorld:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /get
            Method: get

  PutFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: put-function/
      Handler: app.lambdaHandler
      Runtime: nodejs14.x
      Architectures:
        - x86_64
      Events:
        HelloWorld:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /put
            Method: get

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  HelloWorldApi:
    Description: "API Gateway endpoint URL for Prod stage for Hello World function"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/hello/"
  HelloWorldFunction:
    Description: "Hello World Lambda Function ARN"
    Value: !GetAtt HelloWorldFunction.Arn
  HelloWorldFunctionIamRole:
    Description: "Implicit IAM Role created for Hello World function"
    Value: !GetAtt HelloWorldFunctionRole.Arn
